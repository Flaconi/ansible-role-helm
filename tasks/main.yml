---

###
### Main entrypoint
###

- name: Check if Helm binary exists
  shell: command -v helm >/dev/null 2>&1
  register: helm_exist
  ignore_errors: yes

- name: Fail if Helm command does NOT exist
  fail:
    msg: "Helm command doesn NOT exist. Please install Helm v{{ helm_version }}"
  when: helm_exist.rc == 1

- name: Get Helm verson
  command: "{{ helm_local_path }} version --client --template '{% raw %}{{ .Client.SemVer }}{% endraw %}'"
  register: helm_local_version
  ignore_errors: yes

- name: Fail if Helm version does NOT match
  fail:
    msg: "Local Helm version does NOT match the requirements. Please install Helm v{{ helm_version }}"
  when: "'v{{ helm_version }}' != '{{ helm_local_version.stdout }}'"

- name: Update tiller
  command: "{{ helm_local_path }} init --upgrade"

- name: Get the latest list of charts
  command: "{{ helm_local_path }} repo update"

- name: Get all Helm releases
  command: "{{ helm_local_path }} list --all --output yaml"
  register: get_releases_command

- name: Parse all Helm releases
  set_fact:
    # Resource: https://stackoverflow.com/a/39852380
    helm_raw_releases: "{{ get_releases_command.stdout | from_yaml }}"

- name: Get array of release names
  set_fact:
    helm_release_names: "{{ helm_raw_releases.Releases | map(attribute='Name') | list }}"

- name: Install chart (if release does NOT exist yet)
  command: |
    {{ helm_local_path }} install {{ item.release }}
      --version {{ item.chart_version }}
      --namespace {{ item.namespace }}
      --values {{ helm_configuration_files }}/{{ item.values_file_path }}
      --name {{ item.release }}
  with_items: "{{ helm_charts }}"
  when: item.release not in helm_release_names

- name: Update chart (if release exist already)
  command: |
    {{ helm_local_path }} upgrade
      --version {{ item.chart_version }}
      --namespace {{ item.namespace }}
      --values {{ helm_configuration_files }}/{{ item.values_file_path }}
      {{ item.release }} {{ item.chart }}
  with_items: "{{ helm_charts }}"
  when: item.release in helm_release_names
