---

- name: Set os_arch variable
  set_fact:
    os_arch: "{{ ansible_system | lower }}-amd64"

- name: Set Helm download URLs
  set_fact:
    helm_url: |
      https://storage.googleapis.com/kubernetes-helm/helm-v{{ helm_version }}-{{ os_arch }}.tar.gz
    helm_checksum_url: |
      https://storage.googleapis.com/kubernetes-helm/helm-v{{ helm_version }}-{{ os_arch }}.tar.gz.sha256

- name: Create temporary directory locally
  file:
    path: "{{ helm_local_directory_path }}"
    state: directory

- name: Assume Helm is installed
  set_fact:
    helm_local_install: False

- name: Helm binary exists?
  stat:
    path: "{{ helm_local_path }}"
  register: stat_helm_local_path

- name: If Helm binary was not found trigger installation
  set_fact:
    helm_local_install: True
  when: stat_helm_local_path.stat.exists == False

- name: If Helm binary was found check the version
  block:
    - name: Get Helm verson
      command: "{{ helm_local_path }} version --client --template '{% raw %}{{ .Client.SemVer }}{% endraw %}'"
      register: helm_local_version
      ignore_errors: yes
    - name: If Helm version does NOT match trigger installation
      set_fact:
        helm_local_install: True
      when: "'v{{ helm_version }}' != '{{ helm_local_version.stdout }}'"
  when: stat_helm_local_path.stat.exists == True

- name: Install local version of Helm
  block:
    - name: Download Helm checksum
      get_url:
        url: "{{ helm_checksum_url }}"
        dest: "{{ helm_checksum_local_path }}"

    - name: Read in the checksum
      set_fact:
        helm_checksum: "{{ lookup('file', helm_checksum_local_path) }}"

    - name: Download Helm binary archive
      get_url:
        url: "{{ helm_url }}"
        dest: "{{ helm_local_directory_path }}/helm-{{ helm_version }}.tar.gz"
        checksum: "sha256:{{ helm_checksum }}"

    - name: Extract Helm
      unarchive:
        src: "{{ helm_local_directory_path }}/helm-{{ helm_version }}.tar.gz"
        dest: "{{ helm_local_directory_path }}"

    - name: Move files to their final location
      file:
        src: "{{ helm_local_directory_path }}/{{ os_arch }}/helm"
        dest: "{{ helm_local_path }}"
        state: hard

    - name: Cleanup
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ helm_local_directory_path }}/{{ os_arch }}/"
        - "{{ helm_local_directory_path }}/helm-{{ helm_version }}.tar.gz"
        - "{{ helm_checksum_local_path }}"
  when: helm_local_install == True
